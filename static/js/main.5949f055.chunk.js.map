{"version":3,"sources":["Assets/Common/logo-faho.png","Assets/Common/my-photo.jpeg","Containers/Experiences/index.tsx","Components/MenuItem/index.tsx","Components/Menu/index.tsx","Containers/Navbar/index.tsx","Containers/Projects/index.tsx","Containers/Resume/index.tsx","Containers/Header/index.tsx","Containers/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Experiences","className","MenuItem","title","href","Menu","children","src","logo","alt","style","width","height","backgroundColor","ChevronRight","fontSize","Navbar","Projects","data-aos","data-aos-offset","data-aos-delay","data-aos-duration","data-aos-easing","data-aos-mirror","data-aos-once","data-aos-anchor-placement","Resume","Header","MyPhoto","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,uC,iBCA3CD,EAAOC,QAAU,IAA0B,uC,oRCY5BC,G,kBARK,WAEhB,OACI,6BAASC,UAAU,4BCOZC,G,MAP0C,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAEvD,OACI,0BAAI,qBAAGF,UAAU,aAAaG,KAAK,KAAKD,M,gCCiBjCE,EAlBkC,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,SAE/C,OACI,6BACI,yBAAKL,UAAU,iBACX,yBAAKA,UAAU,WAAWM,IAAKC,IAAMC,IAAI,SACzC,wBAAIR,UAAU,UACRK,GAEN,yBAAKI,MAAO,CAACC,MAAM,IAAIC,OAAO,IAAIC,gBAAgB,UAItD,kBAACC,EAAA,EAAD,CAAcJ,MAAO,CAACK,SAAS,OAAQd,UAAU,0BCN9Ce,G,MAZA,WAEX,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUb,MAAM,SAChB,kBAAC,EAAD,CAAUA,MAAM,WAChB,kBAAC,EAAD,CAAUA,MAAM,aAChB,kBAAC,EAAD,CAAUA,MAAM,mBC8Cbc,G,MAtDE,WAEb,OACI,6BAAShB,UAAU,sBACf,yBAAKA,UAAU,oBACX,uCACA,sDAEJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,iBAAf,YAGA,yBAAKA,UAAU,iBAAf,YAGA,yBAAKA,UAAU,iBAAf,aAIJ,yBACIiB,WAAS,UACTC,kBAAgB,MAChBC,iBAAe,KACfC,oBAAkB,OAClBC,kBAAgB,cAChBC,kBAAgB,OAChBC,gBAAc,QACdC,4BAA0B,aAC1BxB,UAAU,oBACV,yBAAKA,UAAU,iBAAf,YAGA,yBAAKA,UAAU,iBAAf,YAGA,yBAAKA,UAAU,iBAAf,aAIJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,iBAAf,YAGA,yBAAKA,UAAU,iBAAf,YAGA,yBAAKA,UAAU,iBAAf,gBCxBDyB,G,MAtBA,WACX,OACI,6BAASzB,UAAU,kBACf,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,sBAAd,SAGA,uBAAGA,UAAU,eAAb,iW,wBCOD0B,EAbA,WAEX,OACI,4BAAQ1B,UAAU,oBACd,uBAAGA,UAAU,eAAb,cAAsC,2DAClC,6BADJ,qCAIA,yBAAKM,IAAKqB,IAASnB,IAAI,UAAUR,UAAU,mBCIxC4B,EAZH,WACV,OACI,yBAAK5B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCY6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5949f055.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-faho.1cb9eafb.png\";","module.exports = __webpack_public_path__ + \"static/media/my-photo.eccb3c09.jpeg\";","import React from \"react\";\nimport './style.css'\n\n\nconst Experiences = () =>{\n\n    return(\n        <section className='experiences-container'>\n        </section>\n    )\n}\n\nexport default Experiences\n","import * as React from \"react\";\nimport './style.scss'\n\ninterface MenuItemProps {\n    title: string;\n}\n\nconst MenuItem: React.FunctionComponent<MenuItemProps> = ({title}): JSX.Element =>{\n\n    return(\n        <li><a className='item-title' href='#'>{title}</a></li>\n    )\n}\n\nexport default MenuItem\n","import React, {ReactNode} from \"react\";\nimport logo from '@Assets/Common/logo-faho.png'\nimport './style.scss'\nimport { ChevronRight } from '@material-ui/icons'\n\ninterface MenuProps {\n    children: React.FunctionComponent | ReactNode\n}\n\nconst Menu: React.FunctionComponent<MenuProps> = ({children}): JSX.Element => {\n\n    return(\n        <nav>\n            <div className='nav-container'>\n                <img className='nav-logo' src={logo} alt='Logo'/>\n                <ul className='nav-ul'>\n                    { children }\n                </ul>\n                <div style={{width:150,height:150,backgroundColor:'red'}}>\n\n                </div>\n            </div>\n            <ChevronRight style={{fontSize:'6em'}} className='nav-container-arrow'/>\n        </nav>\n    )\n}\n\nexport default Menu\n","import React from \"react\";\nimport { MenuItem, Menu } from '@Components/index'\nimport './style.scss'\n\nconst Navbar = () =>{\n\n    return(\n        <Menu>\n            <MenuItem title='Home'/>\n            <MenuItem title='Resume'/>\n            <MenuItem title='Projects'/>\n            <MenuItem title='Experiences'/>\n        </Menu>\n    )\n}\n\nexport default Navbar\n","import React from \"react\";\nimport './style.css'\n\nconst Projects = () =>{\n\n    return(\n        <section className='projects-container'>\n            <div className='projects-columns'>\n                <p>PROJECTS</p>\n                <p>Here it's my projects </p>\n            </div>\n            <div className='projects-columns'>\n                <div className='projects-rows'>\n                    PROJECT1\n                </div>\n                <div className='projects-rows'>\n                    PROJECT2\n                </div>\n                <div className='projects-rows'>\n                    PROJECT2\n                </div>\n            </div>\n            <div\n                data-aos=\"fade-up\"\n                data-aos-offset=\"200\"\n                data-aos-delay=\"50\"\n                data-aos-duration=\"1000\"\n                data-aos-easing=\"ease-in-out\"\n                data-aos-mirror=\"true\"\n                data-aos-once=\"false\"\n                data-aos-anchor-placement=\"top-center\"\n                className='projects-columns'>\n                <div className='projects-rows'>\n                    PROJECT3\n                </div>\n                <div className='projects-rows'>\n                    PROJECT4\n                </div>\n                <div className='projects-rows'>\n                    PROJECT2\n                </div>\n            </div>\n            <div className='projects-columns'>\n                <div className='projects-rows'>\n                    PROJECT5\n                </div>\n                <div className='projects-rows'>\n                    PROJECT6\n                </div>\n                <div className='projects-rows'>\n                    PROJECT2\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Projects\n","import React, {useState} from 'react';\nimport  './style.css';\n\nconst Resume = () => {\n    return(\n        <section className=\"section-header\">\n            <div className='resume-container'>\n                <h1 className='resume-text-header'>\n                   ABOUT\n                </h1>\n                <p className='resume-text'>\n                    Who am I?\n                    Following current technologies,\n                    open to innovations, high energy,\n                    loves developing new products and teamwork\n                    I am always a positive engineer candidate. To push my limits, to question and\n                    in harmony with the place where I work I like to create new added values.\n                    Is dynamic in what I do,\n                    I focus on my work and give importance to details\n                </p>\n            </div>\n        </section>\n    )\n}\n\nexport default Resume\n","import React from 'react';\nimport './style.scss';\nimport MyPhoto from '../../Assets/Common/my-photo.jpeg'\n\nconst Header = () => {\n\n    return(\n        <header className=\"header-container\">\n            <p className=\"header-text\">Hello, I'm <strong>Fahreddin Gölcük.</strong>\n                <br/>\n                I'm Mobile Application Developer.\n            </p>\n            <img src={MyPhoto} alt='myPhoto' className='header-photo'/>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport './App.css';\nimport { Header,Resume,Navbar,Projects,Experiences } from '../index'\n\nconst App = () => {\n  return (\n      <div className=\"App\">\n        <Navbar/>\n        <Header/>\n        <Resume/>\n        <Projects/>\n        <Experiences/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}