{"version":3,"sources":["Assets/Common/logo-faho.png","Assets/Common/my-photo.jpeg","Stores/Menu/Reducers.ts","Stores/Menu/InitialState.ts","Stores/index.ts","Stores/Menu/Types.ts","Containers/Experiences/index.tsx","Components/MenuItem/index.tsx","Stores/Menu/Actions.ts","Components/Menu/index.tsx","Components/Logo/index.tsx","Containers/Navbar/index.tsx","Containers/Projects/index.tsx","Containers/Resume/index.tsx","Containers/Header/index.tsx","Stores/Menu/Selectors.ts","Containers/TopNav/index.tsx","Containers/MenuLast/index.tsx","Containers/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","initialState","menuVisible","rootReducer","combineReducers","menu","state","action","type","store","createStore","compose","applyMiddleware","thunk","Experiences","className","MenuItem","title","href","toggleMenu","console","log","Menu","children","dispatch","useDispatch","Button","onClick","style","alignSelf","marginTop","right","window","open","Twitter","LinkedIn","Instagram","fontWeight","fontSize","Logo","src","logo","alt","Navbar","Projects","Resume","Header","MyPhoto","getMenuState","TopNav","useSelector","MenuLast","opacity","zIndex","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.70972e24.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-faho.c353bee9.png\";","module.exports = __webpack_public_path__ + \"static/media/my-photo.eccb3c09.jpeg\";","import {\n    MenuActionTypes,\n    MenuState,\n    TOGGLE_MENU\n} from \"./Types\";\n\nimport {INITIAL_STATE} from \"./InitialState\";\n\nconst initialState: MenuState = INITIAL_STATE\n\nexport default function menuReducer(\n    state = initialState,\n    action: MenuActionTypes\n): MenuState {\n    switch (action.type) {\n        case TOGGLE_MENU:\n            return {\n                ...state,\n                menuVisible: !state.menuVisible\n            }\n        default:\n            return state;\n    }\n}\n","import {MenuState} from \"./Types\";\n\n\nexport const INITIAL_STATE: MenuState = {\n    menuVisible: false,\n}\n","import {combineReducers, createStore,compose,applyMiddleware} from 'redux'\nimport menuReducer from './Menu/Reducers'\nimport thunk from \"redux-thunk\";\n\nconst rootReducer = combineReducers({\n    menu: menuReducer,\n})\n\nexport const store = createStore(rootReducer,compose(applyMiddleware(thunk)));\n\nexport type MenuState = ReturnType<typeof rootReducer>\n","export interface MenuState {\n    menuVisible: boolean;\n}\n\nexport const TOGGLE_MENU = 'TOGGLE_MENU'\n\ninterface ToggleMenuAction {\n    type: typeof TOGGLE_MENU;\n}\n\n\nexport type MenuActionTypes = ToggleMenuAction;\n","import React from \"react\";\nimport './style.css'\n\n\nconst Experiences = () =>{\n\n    return(\n        <section className='experiences-container'>\n        </section>\n    )\n}\n\nexport default Experiences\n","import * as React from \"react\";\nimport './style.scss'\n\ninterface MenuItemProps {\n    title: string;\n}\n\nconst MenuItem: React.FunctionComponent<MenuItemProps> = ({title}): JSX.Element =>{\n\n    return(\n        <li><a className='item-title' href='#'>{title}</a></li>\n    )\n}\n\nexport default MenuItem\n","import {MenuActionTypes, TOGGLE_MENU} from \"./Types\";\n\nexport function toggleMenu(): MenuActionTypes {\n    console.log('ssss')\n    return {\n        type: TOGGLE_MENU,\n    }\n}\n","import React, {ReactNode} from \"react\";\nimport logo from '@Assets/Common/logo-faho.png'\nimport './style.scss'\nimport { ChevronRight, Twitter, LinkedIn, Instagram } from '@material-ui/icons'\nimport {Logo} from \"@Components/index\";\nimport {Button} from \"@material-ui/core\";\nimport {toggleMenu} from \"../../Stores/Menu/Actions\";\nimport {useDispatch} from \"react-redux\";\n\ninterface MenuProps {\n    children: React.FunctionComponent | ReactNode\n}\n\nconst Menu: React.FunctionComponent<MenuProps> = ({children}): JSX.Element => {\n    const dispatch = useDispatch();\n    return(\n        <nav>\n            <div className='nav-container'>\n                <Button onClick={ () => dispatch(toggleMenu())} style={{ alignSelf:'flex-end', marginTop: 25, right:8 }}>\n                    X\n                </Button>\n                    <Logo/>\n                <ul className='nav-ul'>\n                    { children }\n                </ul>\n                <div>\n                    <Button onClick={ () => window.open('http://google.com',\"_blank\")   }>\n                        <Twitter />\n                    </Button>\n                    <Button>\n                        <LinkedIn />\n                    </Button>\n                    <Button>\n                        <Instagram />\n                    </Button>\n                </div>\n                <p style={{fontWeight:'lighter'}}>Designed by Fahreddin Gölcük</p>\n                <p style={{fontWeight:'lighter',fontSize:8}}>2020</p>\n            </div>\n        </nav>\n    )\n}\n\nexport default Menu\n","import * as React from \"react\";\nimport './style.scss'\nimport logo from \"@Assets/Common/logo-faho.png\";\n\ninterface LogoProps {\n\n}\n\nconst Logo: React.FunctionComponent<LogoProps> = (): JSX.Element =>{\n\n    return(\n            <img className='logo' src={logo} alt='Logo'/>\n    )\n}\n\nexport default Logo\n","import React from \"react\";\nimport { MenuItem, Menu } from '@Components/index'\nimport './style.scss'\n\nconst Navbar = () =>{\n\n    return(\n        <Menu>\n            <MenuItem title='Home'/>\n            <MenuItem title='Resume'/>\n            <MenuItem title='Projects'/>\n            <MenuItem title='Experiences'/>\n        </Menu>\n    )\n}\n\nexport default Navbar\n","import React from \"react\";\nimport './style.css'\n\nconst Projects = () =>{\n\n    return(\n        <section className='projects-container'>\n            <div className='projects-rows'>\n                <p></p>\n            </div>\n            <div className='projects-rows'>\n                PROJECT6\n            </div>\n            <div className='projects-rows'>\n                PROJECT2\n            </div>\n        </section>\n    )\n}\n\nexport default Projects\n","import React, {useState} from 'react';\nimport  './style.css';\n\nconst Resume = () => {\n    return(\n        <section className=\"section-header\">\n            <div className='resume-container'>\n                <h1 className='resume-text-header'>\n                   ABOUT\n                </h1>\n                <p className='resume-text'>\n                    Who am I?\n                    Following current technologies,\n                    open to innovations, high energy,\n                    loves developing new products and teamwork\n                    I am always a positive engineer candidate. To push my limits, to question and\n                    in harmony with the place where I work I like to create new added values.\n                    Is dynamic in what I do,\n                    I focus on my work and give importance to details\n                </p>\n            </div>\n        </section>\n    )\n}\n\nexport default Resume\n","import React from 'react';\nimport './style.scss';\nimport MyPhoto from '../../Assets/Common/my-photo.jpeg'\n\nconst Header = () => {\n\n    return(\n        <header className=\"header-container\">\n            <p className=\"header-text\">Hello, I'm <strong>Fahreddin Gölcük.</strong>\n                <br/>\n                I'm Mobile Application Developer.\n            </p>\n            <img src={MyPhoto} alt='myPhoto' className='header-photo'/>\n        </header>\n    )\n}\n\nexport default Header\n","import {MenuState} from \"../index\";\n\nexport const getMenuState = (state: MenuState): boolean => state.menu.menuVisible;\n","import * as React from \"react\";\nimport './style.scss'\nimport { Menu } from '@material-ui/icons'\nimport {Button} from '@material-ui/core'\nimport { Logo } from \"@Components/index\";\nimport {toggleMenu} from \"../../Stores/Menu/Actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getMenuState} from \"../../Stores/Menu/Selectors\";\n\ninterface TopNavProps {\n\n}\n\nconst TopNav: React.FunctionComponent<TopNavProps> =\n    (): JSX.Element =>{\n    const dispatch = useDispatch();\n        const menuVisible = useSelector(getMenuState);\n    return(\n        <div className='top-nav-container'>\n            <Logo/>\n            <Button className='top-nav-menu' onClick={ () => dispatch(toggleMenu()) }>\n                    <Menu style={{fontSize:'3em'}} className='top-nav-menu-icon'/>\n            </Button>\n        </div>\n    )\n}\n\nexport default TopNav\n","import React, {ReactNode} from \"react\";\nimport './style.scss'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Button} from '@material-ui/core'\nimport {getMenuState} from \"../../Stores/Menu/Selectors\";\nimport {toggleMenu} from \"../../Stores/Menu/Actions\";\nimport Menu from \"@Components/Menu\";\nimport {Navbar} from \"../index\";\n\ninterface MenuLastProps {\n\n}\n\nconst MenuLast: React.FunctionComponent<MenuLastProps> = (): JSX.Element => {\n    const menuVisible = useSelector(getMenuState);\n    const dispatch = useDispatch();\n    console.log(menuVisible)\n    return(\n            <div className='menu-container' style={{opacity: menuVisible ? 1 :0, zIndex: menuVisible? 999: 0}}>\n                <Navbar/>\n            </div>\n    )\n}\n\nexport default MenuLast\n","import React, {useState} from 'react';\nimport './App.css';\nimport {Provider} from 'react-redux'\nimport {store} from '../../Stores/index'\nimport { Header,Resume,Navbar,Projects,Experiences, TopNav,MenuLast } from '../index'\n\nconst App = () => {\n\n  return (\n      <Provider store={store}>\n          <div className=\"App\">\n              <MenuLast/>\n              <TopNav/>\n              <Header/>\n              <Resume/>\n              <Projects/>\n              <Experiences/>\n          </div>\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}